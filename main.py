import client1
import numpy as np  
import random
import math

population_sz=10
strtgne=278
generations =50
gnome_len =11
team_key ="THAt98zM1b3icQ1ai0cH9gkdnzDEFoMgspHYasoHHdpw2iChpl"


population =np.empty((population_sz,11))

#t = [0.0, -1.45799022e-12, -2.28980078e-13,  4.62010753e-11, -1.75214813e-10, -1.83669770e-15,  8.52944060e-16,  2.29423303e-05, -2.04721003e-06, -1.59792834e-08,  9.98214034e-10]
#t=[ 0.00000000e+00 ,-1.31219120e-12 ,-1.85473863e-13 , 3.74228710e-11,-1.73462665e-10, -2.22240422e-15 , 7.67649654e-16 , 2.77602197e-05,-2.25193103e-06, -1.43813551e-08,  9.88231894e-10]

#t=[ 0.00000000e+00 ,-1.26048563e-12 ,-1.65257212e-13 , 2.43076142e-11,-1.25189740e-10, -1.80014742e-15 , 1.00140903e-15 , 2.42421421e-05,-2.00647055e-06, -1.25587930e-08 , 8.80514618e-10]


#created from 8_3.txt 15 gen
#population = np.array([[0.0, -1.2604856310771117e-12, -1.65257211933e-13, 2.4307614206469002e-11, -1.2518973995715002e-10, -1.8001474182e-15, 1.0014090298534673e-15, 2.4242142073221273e-05, -2.00647054773e-06, -1.2558793024957411e-08, 8.805146175539998e-10], [0.0, -1.4005395900856797e-12, -1.65257211933e-13, 2.4307614206469002e-11, -1.3770871395286503e-10, -2.000163798e-15, 1.1015499328388141e-15, 2.69357134146903e-05, -1.9864058422527e-06, -1.3954214472174899e-08, 8.805146175539998e-10], [0.0, -1.4005395900856797e-12, -1.65257211933e-13, 2.4307614206469002e-11, -1.3770871395286503e-10, -2.000163798e-15, 1.0014090298534673e-15, 2.69357134146903e-05, -1.9864058422527e-06, -1.3954214472174899e-08, 8.805146175539998e-10], [0.0, -1.5405935490942478e-12, -1.8361912437e-13, 1.968916750723989e-11, -1.2518973995715002e-10, -1.62013267638e-15, 1.0014090298534673e-15, 2.69357134146903e-05, -1.8058234929569999e-06, -1.2685649520159e-08, 7.924631557985998e-10], [0.0, -1.5405935490942478e-12, -1.65257211933e-13, 2.18768527858221e-11, -1.2518973995715002e-10, -1.8001474182e-15, 1.0014090298534673e-15, 2.69357134146903e-05, -2.00647054773e-06, -1.14170845681431e-08, 7.924631557985998e-10], [0.0, -1.4005395900856797e-12, -1.65257211933e-13, 2.4307614206469002e-11, -1.2518973995715002e-10, -2.2001801778e-15, 1.0014090298534673e-15, 2.69357134146903e-05, -2.00647054773e-06, -1.027537611132879e-08, 8.805146175539998e-10], [0.0, -1.6946529040036726e-12, -2.221791404877e-13, 3.301034028039e-11, -1.851417154255185e-10, -1.8001474182e-15, 8.276107684739399e-16, 3.2921427506843706e-05, -2.45235289167e-06, -1.409516613351e-08, 9.685660793094e-10], [0.0, -1.86411819440404e-12, -2.221791404877e-13, 3.301034028039e-11, -1.851417154255185e-10, -1.98016216002e-15, 9.012681268681205e-16, 2.4242142073221273e-05, -1.8058234929569999e-06, -1.2685649520159e-08, 8.805146175539998e-10], [0.0, -1.6946529040036726e-12, -2.0198103680700001e-13, 2.406453806440431e-11, -1.3770871395286503e-10, -2.2001801778e-15, 1.1015499328388141e-15, 2.4487012195173e-05, -1.8058234929569999e-06, -1.5504682746861e-08, 1.0761845325659999e-09], [0.0, -1.5251876136033054e-12, -2.221791404877e-13, 2.406453806440431e-11, -1.2518973995715002e-10, -2.2001801778e-15, 9.10371845321334e-16, 2.9629284756159337e-05, -2.697588180837e-06, -1.409516613351e-08, 9.685660793094e-10]])

#created from 12th gen of 12_3_1 stored in 13_3_1.txt  no change in vector 
"""population = np.array([[0.0, -1.358942163720545e-12, -2.1558019783607483e-13, 1.949227583216749e-11, -1.3633162681333635e-10, -1.458119408742e-15, 8.030299010394954e-16, 2.4242142073221273e-05, -2.591292443135181e-06, -1.1302913722461669e-08, 8.543624528980285e-10],
[0.0, -1.1118617703168094e-12, -1.9796161417454068e-13, 2.358565375692266e-11, -1.0140368936529151e-10, -1.98016216002e-15, 7.949996020291005e-16, 2.6399692717737964e-05, -1.9274076023319524e-06, -1.857305946246479e-08, 9.492916143311428e-10],
[0.0, -1.2230479473484903e-12, -1.7816545275708662e-13, 1.9297353073845817e-11, -1.1154405830182067e-10, -1.782145944018e-15, 7.227269109355458e-16, 2.4242142073221273e-05, -2.1201483625651477e-06, -1.1302913722461669e-08, 8.543624528980285e-10],
[0.0, -1.2230479473484905e-12, -1.9402217805246734e-13, 2.165808425796388e-11, -1.239378425575785e-10, -1.458119408742e-15, 8.83332891143445e-16, 2.1817927865899146e-05, -1.9274076023319524e-06, -1.1302913722461669e-08, 8.458188283690482e-10],
[0.0, -1.2354019670186771e-12, -2.419530839911053e-13, 2.406453806440431e-11, -1.1267076596143502e-10, -1.8001474182e-15, 8.030299010394954e-16, 2.1817927865899146e-05, -2.591292443135181e-06, -1.0172622350215501e-08, 9.397986981878313e-10],
[0.0, -1.358942163720545e-12, -2.1558019783607483e-13, 2.165808425796388e-11, -1.3633162681333635e-10, -1.6039313496162e-15, 7.949996020291005e-16, 2.933299190859774e-05, -1.9274076023319524e-06, -1.857305946246479e-08, 8.543624528980285e-10],
[0.0, -1.1118617703168094e-12, -2.1775777559199475e-13, 2.358565375692266e-11, -1.0140368936529151e-10, -1.98016216002e-15, 7.949996020291005e-16, 2.933299190859774e-05, -2.1415640025910584e-06, -1.857305946246479e-08, 1.16024530640473e-09],
[0.0, -1.2230479473484903e-12, -1.7816545275708662e-13, 1.7367617766461234e-11, -1.0140368936529151e-10, -1.782145944018e-15, 7.227269109355458e-16, 2.4242142073221273e-05, -2.1201483625651477e-06, -1.1302913722461669e-08, 8.543624528980285e-10],
[0.0, -1.358942163720545e-12, -1.587454184065642e-13, 2.165808425796388e-11, -1.3633162681333635e-10, -1.458119408742e-15, 9.716661802577895e-16, 2.4242142073221273e-05, -1.9274076023319524e-06, -1.2433205094707836e-08, 7.689262076082257e-10],
[0.0, -1.2354019670186771e-12, -2.419530839911053e-13, 2.406453806440431e-11, -1.239378425575785e-10, -1.8001474182e-15, 8.030299010394954e-16, 2.4242142073221273e-05, -2.591292443135181e-06, -1.2433205094707836e-08, 9.397986981878313e-10]
])"""


#created from 13_3_1 end
"""tk = [ 0.00000000e+00 ,-1.22304795e-12 ,-1.94022178e-13 , 2.16580843e-11,
 -1.23937843e-10 ,-1.45811941e-15,  8.83332891e-16,  2.18179279e-05,
 -1.92740760e-06 ,-1.13029137e-08  ,8.45818828e-10]
for i in range(population_sz):
    population[i] = np.array(tk)
"""

#created from 14_3_1 end 14_3_2 no change even worse
"""population=np.array([[0.0, -1.1480380869653274e-12, -2.827636023413351e-13, 1.6772627423846465e-11, -8.348619887516177e-11, -1.4116465692510592e-15, 1.1055969999717684e-15, 1.8754740418120953e-05, -1.6876745562312717e-06, -1.0177579231069635e-08, 7.497117252829525e-10],
[0.0, -9.460835562717363e-13, -2.1744801991608716e-13, 2.3607827281029966e-11, -1.0842266595486495e-10, -1.198933639660796e-15, 1.0036364518310317e-15, 1.8754740418120953e-05, -1.760710306033326e-06, -1.0177579231069635e-08, 7.799547378147573e-10],
[0.0, -1.1817497494004376e-12, -2.1744801991608716e-13, 2.2130476493957364e-11, -1.2156709602997726e-10, -1.198933639660796e-15, 1.1998457509573193e-15, 2.3931454686846163e-05, -1.6718591360254781e-06, -1.0913482300144985e-08, 6.920950953440732e-10],
[0.0, -1.1480380869653274e-12, -2.676282876025617e-13, 1.2769794037427048e-11, -8.348619887516177e-11, -1.2473391722312367e-15, 9.448676761850337e-16, 1.926397861988794e-05, -1.896883685636335e-06, -8.257505895391744e-09, 7.799547378147573e-10],
[0.0, -1.0716328003124812e-12, -1.6016552368096535e-13, 1.8789028959715356e-11, -9.734776408282897e-11, -1.1384003968467676e-15, 1.1221545500493264e-15, 1.926397861988794e-05, -1.8325189408781118e-06, -1.0177579231069635e-08, 7.799547378147573e-10],
[0.0, -9.460835562717363e-13, -2.1744801991608716e-13, 2.1109136793281815e-11, -1.257354502831701e-10, -1.198933639660796e-15, 8.348755144169801e-16, 1.8754740418120953e-05, -1.8325189408781118e-06, -1.0177579231069635e-08, 7.799547378147573e-10],
[0.0, -1.1817497494004376e-12, -2.1744801991608716e-13, 2.347271853703965e-11, -1.2156709602997726e-10, -1.198933639660796e-15, 8.801902325821224e-16, 2.227863899839133e-05, -1.5776353201780151e-06, -1.0615673137609739e-08, 7.241709338080999e-10],
[0.0, -1.1480380869653274e-12, -2.827636023413351e-13, 1.6772627423846465e-11, -8.348619887516177e-11, -1.263589325805087e-15, 1.0036364518310317e-15, 1.8754740418120953e-05, -1.8325189408781118e-06, -1.0177579231069635e-08, 7.330431087585401e-10],
[0.0, -1.216222192522258e-12, -1.975412246948338e-13, 1.8789028959715356e-11, -9.734776408282897e-11, -1.1384003968467676e-15, 1.0036364518310317e-15, 1.9483160101747126e-05, -2.0738880697547707e-06, -1.1708551170377767e-08, 8.498186378452516e-10],
[0.0, -1.304729774979934e-12, -2.676282876025617e-13, 1.747363452565157e-11, -8.344482372457329e-11, -1.5252071497732517e-15, 1.0616021073835639e-15, 1.9148261150680864e-05, -1.960680227260229e-06, -1.1708551170377767e-08, 9.807145364440585e-10]])
"""

#created from 14_1.txt to 14_3.txt
"""
t=[ 0.00000000e+00 ,-1.14803809e-12 ,-2.82763602e-13 , 1.67726274e-11,
 -8.34861989e-11, -1.41164657e-15,  1.10559700e-15  ,1.87547404e-05,
 -1.68767456e-06 ,-1.01775792e-08 , 7.49711725e-10]
population = np.zeros((10,11))
"""


#14_3.txt Min of Generation: 22 :  208085007403.77872
"""population = np.array([[0.0, -1.3902319341353505e-12, -3.1375141560693684e-13, 2.0228644856547466e-11, -6.102666717997875e-11, -1.4798828391075683e-15, 1.256755888758824e-15, 1.4412638875036338e-05, -1.768534933708487e-06, -8.528250577080197e-09, 7.851633405277513e-10],
[0.0, -1.3398171853432885e-12, -3.7900783587432805e-13, 1.771478337934517e-11, -6.102666717997875e-11, -1.3577697841447626e-15, 2.0724978407028313e-15, 1.3615597844665094e-05, -1.6403389767853043e-06, -1.1801182855951411e-08, 7.996804116682451e-10],
[0.0, -1.3905764269575054e-12, -2.6013628394905905e-13, 2.522089357369063e-11, -6.724102583063734e-11, -1.4852045206934262e-15, 1.7715950508438874e-15, 1.3890932402310083e-05, -1.6403389767853043e-06, -1.1801182855951411e-08, 7.996804116682451e-10],
[0.0, -1.3601341018328223e-12, -2.882160058334772e-13, 2.223596917646012e-11, -5.7769610572784736e-11, -1.4852045206934262e-15, 1.5454048502408234e-15, 1.3950106477489146e-05, -1.684696324022889e-06, -1.0583519504316597e-08, 7.860357626570734e-10],
[0.0, -1.271842623119449e-12, -3.311994045581752e-13, 2.328700530575101e-11, -2.889334265017686e-11, -1.3287649454040301e-15, 1.87913597743116e-15, 1.2478713726476635e-05, -1.6403389767853043e-06, -1.1801182855951411e-08, 7.996804116682451e-10],
[0.0, -1.3601341018328223e-12, -2.5887858853019064e-13, 2.223596917646012e-11, -4.975501488589706e-11, -1.4274123407421229e-15, 1.7715950508438874e-15, 1.3615597844665094e-05, -1.6068793685820242e-06, -1.1801182855951411e-08, 7.996804116682451e-10],
[0.0, -1.3601341018328223e-12, -2.5887858853019064e-13, 2.223596917646012e-11, -6.102666717997875e-11, -1.4852045206934262e-15, 1.2234147730783441e-15, 1.2990438999179898e-05, -1.768534933708487e-06, -9.036531159871992e-09, 7.851633405277513e-10],
[0.0, -1.3398171853432885e-12, -4.0473587697058625e-13, 1.544002085668246e-11, -6.102666717997875e-11, -1.4852045206934262e-15, 1.5708898256115226e-15, 1.630967767436052e-05, -1.6403389767853043e-06, -1.405737413332625e-08, 7.996804116682451e-10],
[0.0, -1.271842623119449e-12, -3.4664966731261834e-13, 2.7882038532995096e-11, -3.3975955285874576e-11, -1.3886860230880473e-15, 1.2234147730783441e-15, 1.3854439946963793e-05, -1.768534933708487e-06, -8.528250577080197e-09, 8.772490064883951e-10],
[0.0, -1.3398171853432885e-12, -3.380995453886468e-13, 1.5932208932518647e-11, -6.102666717997875e-11, -1.2009930626716558e-15, 1.2234147730783441e-15, 1.3854439946963793e-05, -1.5033751159279529e-06, -9.015897027571109e-09, 7.851633405277513e-10]])
"""

# 15_1 end
population = np.array([[0.0, -1.0460172422404952e-12, -1.3834235839810128e-13, 2.3715753221091636e-11, -4.549537304155811e-11, -4.669174679337759e-16, 3.155401095167029e-16, 1.7794262377702856e-05, -1.4700710303389147e-06, -9.927932941915639e-09, 6.336563988741462e-10],
[0.0, -1.159712009301162e-12, -1.3338768810992083e-13, 3.1229539214990914e-11, -4.2240725065362273e-11, -4.4338501479136483e-16, 2.692758336403245e-16, 1.864164579436363e-05, -1.5507269869286544e-06, -9.922793976829005e-09, 6.546930781078044e-10],
[0.0, -1.0465009645866616e-12, -1.3784540818270984e-13, 2.4107321395975675e-11, -5.0437427663329934e-11, -4.621205127708679e-16, 2.9923676388248376e-16, 1.7828015370490633e-05, -1.6604440592630714e-06, -9.928515044090427e-09, 7.212426272851862e-10],
[0.0, -1.1260646309787744e-12, -1.5111934977323482e-13, 2.4107238148416907e-11, -4.226746769040594e-11, -4.674599849814754e-16, 3.1307619264767357e-16, 1.539056250525894e-05, -1.474296254666533e-06, -9.40532324636257e-09, 6.347779107358939e-10],
[0.0, -1.1320763436627143e-12, -1.3839871606070884e-13, 2.5275998724884432e-11, -4.9283523883402116e-11, -4.693041390318637e-16, 3.1567675443723242e-16, 1.4148083507490842e-05, -1.3279778758947486e-06, -9.374145853338194e-09, 5.805281270905425e-10],
[0.0, -1.1348988202752062e-12, -1.3921576079330747e-13, 2.301597156269311e-11, -5.112283256692137e-11, -4.772683117087704e-16, 2.839665065798019e-16, 1.760848394796253e-05, -1.4621703136312468e-06, -8.774009377654883e-09, 6.316290350302175e-10],
[0.0, -9.913581536352492e-13, -1.1978395894694268e-13, 2.770288435016976e-11, -3.9621468131985574e-11, -3.2676933995217423e-16, 2.517922954252555e-16, 1.5981458458380236e-05, -1.5819526939731573e-06, -9.938816543523618e-09, 6.626307460769624e-10],
[0.0, -1.0418401345310036e-12, -1.4263369327728633e-13, 2.0073447707461568e-11, -4.6242990167209624e-11, -5.083408145123835e-16, 3.227959158514242e-16, 1.7502793754205084e-05, -1.431716271532482e-06, -1.0868455208858067e-08, 6.063590869437246e-10],
[0.0, -1.064730353344615e-12, -1.1890353710775887e-13, 3.9032452779919674e-11, -4.796349690220912e-11, -2.395449626382315e-16, 2.826727719919815e-16, 1.911484589945004e-05, -1.5334615844805423e-06, -9.952041884720208e-09, 6.78705996968254e-10],
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]])


def create_gnome():
    ans =  [random.uniform(-10.0,10.0) for _ in range(gnome_len)]
    return np.array(ans)

def sort_fn(population,f):
    return population[f.argsort()]

def mate(sel_parents):
    children = np.zeros((10,11))
    for i in range(int(population_sz/2)):
        p1i =  random.randint(0,int(population_sz/2)-1)
        p2i =  random.randint(0,int(population_sz/2)-1)
        p1 = sel_parents[p1i]
        p2 = sel_parents[p2i]

        temp = random.random()
        if(temp <0.5):
            k = (2*temp)**((4)**-1)
        else:
            k = ((2*(1-temp))**-1)**((4)**-1)
            
        children[i] = 0.5*((1+k)*p1 + (1-k)*p2)
        children[i*2+1] = 0.5*((1-k)*p1 + (1+k)*p2)
    """for i in range(population_sz):
        p1i =  random.randint(0,int(population_sz/2)-1)
        p2i =  random.randint(0,int(population_sz/2)-1)
        p1 = sel_parents[p1i]
        p2 = sel_parents[p2i]
        cut_index = 6
        child = np.zeros((11))
        child[:cut_index]=p1[:cut_index]
        child[cut_index:] = p2[cut_index:]
        children[i] =child"""
    
    return children





def mutate(population,sz):
    for i in range(1,sz):
        for j in range(11):
            p= random.random()
            if p > 0.68 :
                population[i][j] += random.uniform(-0.2,0.2)*population[i][j]
                if population[i][j] <-10:
                    population[i][j] = -10
                elif population[i][j] > 10:
                    population[i][j] =10

    return population



def intialmutate(population):
    for i in range(2,population_sz):
        for j in range(11):
            p= random.random()
            if p < 0.68 :
                p1 = random.random()
                if p1 > 0.5:
                    population[i][j] += 0.3*population[i][j]
                else:
                    population[i][j] -= 0.3*population[i][j]
                if population[i][j] <-10:
                    population[i][j] = -10
                elif population[i][j] > 10:
                    population[i][j] =10

    return population



#population = mutate(population,population_sz)
fitness =np.empty((12))

'''
for k in range(8):
    population[k] = np.array(t)
for k in range(8,population_sz):
    population[k] = create_gnome()
'''
#population =  mutate(population,10)


f=np.empty((10))
for i in range(population_sz):
    a= client1.get_errors(team_key,list(population[i]))
    f[i] = a[0]+a[1]

population = sort_fn(population,f)

for generation in range(1,generations+1):
    
    print("Generation: ",generation+strtgne)
    print()  
    print("Intial popln: ",)
    for i in range(int(population_sz)):
       print(list(population[i]))
    print()
    print("After Selection:")    
    for i in range(int(population_sz/2)):
       print(list(population[i]))



    t = np.empty((12,11))
    t[0:2,:]=population[0:2,:]
    t[2:12,:] = mate(population[:int(population_sz/2)])

    print()
    print("After CrossOver:")    
    for i in range(12):
       print(list(t[i]))
    
    t= mutate(t,12)
    
    
    for i in range(12):
        a= client1.get_errors(team_key,list(t[i]))
        fitness[i] = a[0]+a[1]

    t =  sort_fn(t,fitness)
    population = t[0:10,:]

    print()
    print("After Mutation:")    
    for i in range(10):
       print(list(population[i]))


    client1.submit(team_key,list(population[0]))

    print("Min of Generation:",generation+strtgne ,": ", min(fitness))
    print("Best vector of this gen ",list(population[0]))
    print()


            



